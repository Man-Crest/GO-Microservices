version: '3'

services:

  broker-service:
    build:
      context: ./../broker-service
      dockerfile: ./../broker-service/broker-service.dockerfile
    restart: always
    ports:
      - "8080:80"
    deploy:
      mode: replicated
      replicas: 1

  authentication-service:
    build:
      context: ./../authentication-service
      dockerfile: ./../authentication-service/authentication-service.dockerfile
    restart: always
    ports:
      - "8085:80"
    deploy:
      mode: replicated
      replicas: 1
    environment:
      DSN: "host=postgres port=5432 user=postgres password=password dbname=users sslmode=disable timezone=UTC connect_timeout=5"
  
  logger-service:
    build:
      context: ./../logger-service
      dockerfile: ./../logger-service/logger-service.dockerfile
    restart: always
    deploy:
      mode: replicated
      replicas: 1
  
  # listener-service:
  #   build:
  #     context: ./../listener-service
  #     dockerfile: ./../listener-service/listener-service.dockerfile
  #   restart: always
  #   deploy:
  #     mode: replicated
  #     replicas: 1

  postgres:
    image: 'postgres:latest'
    ports:
      - "5432:5432"
    restart: always
    deploy:
      mode: replicated
      replicas: 1
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: users
    volumes:
      - ./db-data/postgres/:/var/lib/postgresql/data/

  mongo:
    image: 'mongo:latest'
    ports:
      - "27017:27017"
    deploy:
      mode: replicated
      replicas: 1
      
  mongo-express:
    image: mongo-express
    restart: always
    ports:
      - 8081:8081
    environment:
      ME_CONFIG_MONGODB_SERVER: mongo
      ME_CONFIG_BASICAUTH_USERNAME: admin
      ME_CONFIG_BASICAUTH_PASSWORD: password
 
  
  # mailhog:
  #   image: 'mailhog/mailhog:latest'
  #   ports:
  #     - "1025:1025"
  #     - "8025:8025"

  # rabbitmq:
  #   image: 'rabbitmq:3-alpine'
  #   ports:
  #     - "5672:5672"
  #   deploy: 
  #     mode: replicated
  #     replicas: 1
  #   volumes:
  #     - ./db-data/rabbitmq/:/var/lib/rabbitmq/
